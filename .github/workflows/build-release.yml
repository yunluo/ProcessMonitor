name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: Build Windows Binaries
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install LLVM MinGW
      run: |
        # Download and extract LLVM MinGW
        curl -L -o llvm-mingw.zip https://github.com/mstorsjo/llvm-mingw/releases/download/20251021/llvm-mingw-20251021-msvcrt-i686.zip
        curl -L -o llvm-mingw-x64.zip https://github.com/mstorsjo/llvm-mingw/releases/download/20251021/llvm-mingw-20251021-msvcrt-x86_64.zip
        7z x llvm-mingw.zip -ollvm-mingw
        7z x llvm-mingw-x64.zip -ollvm-mingw-x64
        echo "LLVM_MINGW_32=$(pwd)\llvm-mingw" >> $env:GITHUB_ENV
        echo "LLVM_MINGW_64=$(pwd)\llvm-mingw-x64" >> $env:GITHUB_ENV

    - name: Install 7-Zip
      run: |
        choco install 7zip
        
    - name: Build 32-bit and 64-bit binaries
      run: |
        # Update build script with correct paths
        $content = Get-Content src\build_final.bat
        $content = $content -replace 'set LLVM_MINGW_32=.*', "set LLVM_MINGW_32=$env:LLVM_MINGW_32"
        $content = $content -replace 'set LLVM_MINGW_64=.*', "set LLVM_MINGW_64=$env:LLVM_MINGW_64"
        $content | Set-Content src\build_final.bat
        
        # Run the build script
        cd src
        .\build_final.bat
        
    - name: Create 7z archives
      run: |
        # Get tag name or use nightly
        $tag = if ("${{ github.ref_type }}" -eq "tag") { "${{ github.ref_name }}" } else { "nightly" }
        
        # Create 32-bit archive
        & "C:\Program Files\7-Zip\7z.exe" a "process_monitor-x86-$tag.7z" build\x86\*
        
        # Create 64-bit archive
        & "C:\Program Files\7-Zip\7z.exe" a "process_monitor-x64-$tag.7z" build\x64\*
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: process_monitor-binaries
        path: |
          process_monitor-x86-*.7z
          process_monitor-x64-*.7z

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: process_monitor-binaries
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          process_monitor-x86-*.7z
          process_monitor-x64-*.7z
        generate_release_notes: true